# Note: this targets Nvida Turing architecture, for Telsa T4 GPUs --> arch 75, see DCMAKE_CUDA_ARCHITECTURES
# see: https://arnon.dk/matching-sm-architectures-arch-and-gencode-for-various-nvidia-cards/
build:
  cuda: "11.8.0"
  gpu: true
  python_version: "3.10"
  system_packages:
    - "build-essential"
    - "cmake"
    - "curl"
    - "ffmpeg"
    - "git"
    - "libatlas-base-dev"
    - "libboost-filesystem-dev"
    - "libboost-graph-dev"
    - "libboost-program-options-dev"
    - "libboost-system-dev"
    - "libboost-test-dev"
    - "libhdf5-dev"
    - "libcgal-dev"
    - "libeigen3-dev"
    - "libflann-dev"
    - "libfreeimage-dev"
    - "libgflags-dev"
    - "libglew-dev"
    - "libgoogle-glog-dev"
    - "libmetis-dev"
    - "libprotobuf-dev"
    - "libqt5opengl5-dev"
    - "libsqlite3-dev"
    - "libsuitesparse-dev"
    - "nano"
    - "protobuf-compiler"
    - "python-is-python3"
    - "python3.10-dev"
    - "python3-pip"
    - "qtbase5-dev"
    - "sudo"
    - "vim-tiny"
    - "wget"
  run:
    - git clone --branch v0.6.0 https://github.com/google/glog.git --single-branch && cd glog && mkdir build && cd build && cmake .. && make -j `nproc` && make install && cd ../.. && rm -rf glog
    - export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/local/lib"
    - git clone --branch 2.1.0 https://ceres-solver.googlesource.com/ceres-solver.git --single-branch && cd ceres-solver && git checkout $(git describe --tags) && mkdir build && cd build && cmake .. -DBUILD_TESTING=OFF -DBUILD_EXAMPLES=OFF && make -j `nproc` && make install && cd ../.. && rm -rf ceres-solver
    - git clone --branch 3.8 https://github.com/colmap/colmap.git --single-branch && cd colmap && mkdir build && cd build && cmake .. -DCUDA_ENABLED=ON -DCMAKE_CUDA_ARCHITECTURES=75 && make -j `nproc` && make install && cd ../.. && rm -rf colmap
    - useradd -m -d /home/user -g root -G sudo -u 1000 user
    - usermod -aG sudo user
    - echo "user:user" | chpasswd
    - echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
    - su user
    - cd /home/user
    - export PATH="${PATH}:/home/user/.local/bin"
    - git clone https://github.com/nerfstudio-project/nerfstudio.git --branch v1.0.1 --single-branch
    - python -m pip install --no-cache-dir --upgrade pip setuptools pathtools promise pybind11
    - export CUDA_VER=11.8 && CUDA_VER=118 && python -m pip install --no-cache-dir torch==2.0.1+cu${CUDA_VER} torchvision==0.15.2+cu${CUDA_VER} --extra-index-url https://download.pytorch.org/whl/cu${CUDA_VER}
    - export TCNN_CUDA_ARCHITECTURES=75 && python -m pip install --no-cache-dir git+https://github.com/NVlabs/tiny-cuda-nn.git@v1.6#subdirectory=bindings/torch
    - git clone --branch v0.4.0 --recursive https://github.com/colmap/pycolmap.git && cd pycolmap && python -m pip install --no-cache-dir . && cd ..
    - git clone --branch master --recursive https://github.com/cvg/Hierarchical-Localization.git && cd Hierarchical-Localization && git checkout v1.4 && python -m pip install --no-cache-dir -e . && cd ..
    - git clone --branch v1.0 --recursive https://github.com/cvg/pyceres.git && cd pyceres && python -m pip install --no-cache-dir -e . && cd ..
    # SKIP Pixel Perfect SfM
    - python -m pip install --no-cache-dir omegaconf
    - su root
    - chown -R user /home/user/nerfstudio
    - su user
    - cd nerfstudio && python -m pip install --no-cache-dir -e . && cd ..
    - ns-install-cli --mode install

